digraph "Drv_Devices_printRegisters"
{
  edge [fontname="FreeSans",fontsize="10",labelfontname="FreeSans",labelfontsize="10"];
  node [fontname="FreeSans",fontsize="10",shape=record];
  rankdir="LR";
  Node1 [label="Drv_Devices_printRegisters",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black"];
  Node1 -> Node2 [color="midnightblue",fontsize="10",style="solid"];
  Node2 [label="Drv_ADS1299_getSlavePresent",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__ADS1299__Library.html#gae15b4a58c8244229e31efdc1c66a8672",tooltip="To know if the Slave Board is present. "];
  Node1 -> Node3 [color="midnightblue",fontsize="10",style="solid"];
  Node3 [label="Drv_ADS1299_RREGS",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__ADS1299__Library.html#gae5ee6c66ba40e661985018da02f4683d",tooltip="Read multiple ADS registers. "];
  Node3 -> Node4 [color="midnightblue",fontsize="10",style="solid"];
  Node4 [label="Drv_ADS1299_csLow",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__ADS1299__Library.html#gae7bfe7b22c142ad6af3606fc094dd149",tooltip="SPI chip select method. "];
  Node4 -> Node5 [color="midnightblue",fontsize="10",style="solid"];
  Node5 [label="Drv_GPIO_setPinState",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__GPIO__Library.html#gaa0fc19aa74a1bf75817ba137e78f7a0a",tooltip="Set a GPIO pin state. "];
  Node5 -> Node6 [color="midnightblue",fontsize="10",style="solid"];
  Node6 [label="Chip_GPIO_SetPinState",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__GPIO__17XX__40XX.html#ga2d8db9f0a52f061d64e8cada713ae03e",tooltip="Set a GPIO pin state. "];
  Node3 -> Node7 [color="midnightblue",fontsize="10",style="solid"];
  Node7 [label="Drv_ADS1299_xfer",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__ADS1299__Library.html#gaacd804d5af6ab72174a9cb050dcf9041",tooltip="SPI communication method. "];
  Node7 -> Node8 [color="midnightblue",fontsize="10",style="solid"];
  Node8 [label="spi_rw",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__SSP__Library.html#ga3808c285915bc0c410f4188eafce502d",tooltip="Faster way to transfer a single a byte via SSP. "];
  Node3 -> Node9 [color="midnightblue",fontsize="10",style="solid"];
  Node9 [label="delayUs",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__Devices__Library.html#ga120f8cfcae7121ef62deee0473cf19ee",tooltip="Delay in microseconds. "];
  Node3 -> Node10 [color="midnightblue",fontsize="10",style="solid"];
  Node10 [label="Drv_ADS1299_csHigh",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__ADS1299__Library.html#gad90e09cf6259d704d03a6b3f569d0976",tooltip="SPI chip de-select. "];
  Node10 -> Node5 [color="midnightblue",fontsize="10",style="solid"];
  Node1 -> Node11 [color="midnightblue",fontsize="10",style="solid"];
  Node11 [label="delayMs",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__Devices__Library.html#gadde208bf0ea8bb35d8606d3859219a40",tooltip="Delay in milliseconds. "];
  Node1 -> Node12 [color="midnightblue",fontsize="10",style="solid"];
  Node12 [label="Drv_ADS1299_getRegistersData",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__ADS1299__Library.html#ga790bde97963d9c00dc481bd2bbe91628",tooltip="Return a array with ADS1299 registers data. "];
  Node1 -> Node13 [color="midnightblue",fontsize="10",style="solid"];
  Node13 [label="Drv_UART_Send",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__UART__Library.html#ga3cd9c151bd9649652b8f6c7a8a371f4b",tooltip="Send data by UART. "];
  Node13 -> Node14 [color="midnightblue",fontsize="10",style="solid"];
  Node14 [label="Chip_UART_SendBlocking",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__UART__17XX__40XX.html#gad2e45d820abdd0e1790ebd61938c100a",tooltip="Transmit a byte array through the UART peripheral (blocking) "];
  Node14 -> Node15 [color="midnightblue",fontsize="10",style="solid"];
  Node15 [label="Chip_UART_Send",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__UART__17XX__40XX.html#gacbd726b1450510892272857e43854c4c",tooltip="Transmit a byte array through the UART peripheral (non-blocking) "];
  Node15 -> Node16 [color="midnightblue",fontsize="10",style="solid"];
  Node16 [label="Chip_UART_ReadLineStatus",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__UART__17XX__40XX.html#gaf15ab7a9529d102b91760ed5587b279a",tooltip="Return Line Status register/status (LSR) "];
  Node15 -> Node17 [color="midnightblue",fontsize="10",style="solid"];
  Node17 [label="Chip_UART_SendByte",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__UART__17XX__40XX.html#gaa600b8621d1425b1b493238a68f38088",tooltip="Transmit a single data byte through the UART peripheral. "];
  Node1 -> Node18 [color="midnightblue",fontsize="10",style="solid"];
  Node18 [label="Drv_Devices_printRegisterName",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__Devices__Library.html#gad85a26f63a893c55cdbbe5c4c0d0e69e",tooltip="To get and send by UART the name of a specific ADS1299 register. "];
  Node18 -> Node13 [color="midnightblue",fontsize="10",style="solid"];
  Node1 -> Node19 [color="midnightblue",fontsize="10",style="solid"];
  Node19 [label="Drv_Devices_sendEOT",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__Devices__Library.html#ga26ea493ed59bae1e6a0c0af4ece44f40",tooltip="Send characters to shake hands with the controlling program. "];
  Node19 -> Node13 [color="midnightblue",fontsize="10",style="solid"];
}
