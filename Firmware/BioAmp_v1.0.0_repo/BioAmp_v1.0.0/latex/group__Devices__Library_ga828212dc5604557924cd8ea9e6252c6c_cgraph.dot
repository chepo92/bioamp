digraph "Drv_Devices_sendChannelData"
{
  edge [fontname="FreeSans",fontsize="10",labelfontname="FreeSans",labelfontsize="10"];
  node [fontname="FreeSans",fontsize="10",shape=record];
  rankdir="LR";
  Node1 [label="Drv_Devices_sendChannelData",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black"];
  Node1 -> Node2 [color="midnightblue",fontsize="10",style="solid"];
  Node2 [label="Drv_ADS1299_isDataAvailable",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__ADS1299__Library.html#ga55bafd8fc454bf91a40711e71c9028e0",tooltip="Query to see if data is available from the ADS1299. "];
  Node2 -> Node3 [color="midnightblue",fontsize="10",style="solid"];
  Node3 [label="Drv_GPIO_getPinState",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__GPIO__Library.html#ga3979c4c389440c603c44afef9b25c6c6",tooltip="Get a GPIO pin state. "];
  Node3 -> Node4 [color="midnightblue",fontsize="10",style="solid"];
  Node4 [label="Chip_GPIO_GetPinState",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__GPIO__17XX__40XX.html#ga9f0e35190f01c706564a88f1f88cf716",tooltip="Get a GPIO pin state via the GPIO byte register. "];
  Node1 -> Node5 [color="midnightblue",fontsize="10",style="solid"];
  Node5 [label="Drv_ADS1299_getChannelData",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__ADS1299__Library.html#ga7b9304053ccfe17319cc73d1c5c738c1",tooltip="Function to get Channel Data. "];
  Node5 -> Node6 [color="midnightblue",fontsize="10",style="solid"];
  Node6 [label="Drv_ADS1299_updateChannelData",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__ADS1299__Library.html#gab649fc7f231ca292b9c06cc31e50fff1",tooltip="Function called to receive new data from the ADS1299. "];
  Node6 -> Node7 [color="midnightblue",fontsize="10",style="solid"];
  Node7 [label="Drv_ADS1299_updateBoardData",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__ADS1299__Library.html#ga6a7fda986df83568223e0d81ec493169",tooltip="Function called to receive new data from the master board. "];
  Node7 -> Node8 [color="midnightblue",fontsize="10",style="solid"];
  Node8 [label="Drv_ADS1299_csLow",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__ADS1299__Library.html#gae7bfe7b22c142ad6af3606fc094dd149",tooltip="SPI chip select method. "];
  Node8 -> Node9 [color="midnightblue",fontsize="10",style="solid"];
  Node9 [label="Drv_GPIO_setPinState",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__GPIO__Library.html#gaa0fc19aa74a1bf75817ba137e78f7a0a",tooltip="Set a GPIO pin state. "];
  Node9 -> Node10 [color="midnightblue",fontsize="10",style="solid"];
  Node10 [label="Chip_GPIO_SetPinState",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__GPIO__17XX__40XX.html#ga2d8db9f0a52f061d64e8cada713ae03e",tooltip="Set a GPIO pin state. "];
  Node7 -> Node11 [color="midnightblue",fontsize="10",style="solid"];
  Node11 [label="Drv_ADS1299_xfer",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__ADS1299__Library.html#gaacd804d5af6ab72174a9cb050dcf9041",tooltip="SPI communication method. "];
  Node11 -> Node12 [color="midnightblue",fontsize="10",style="solid"];
  Node12 [label="spi_rw",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__SSP__Library.html#ga3808c285915bc0c410f4188eafce502d",tooltip="Faster way to transfer a single a byte via SSP. "];
  Node7 -> Node13 [color="midnightblue",fontsize="10",style="solid"];
  Node13 [label="Drv_ADS1299_csHigh",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__ADS1299__Library.html#gad90e09cf6259d704d03a6b3f569d0976",tooltip="SPI chip de-select. "];
  Node13 -> Node9 [color="midnightblue",fontsize="10",style="solid"];
  Node6 -> Node14 [color="midnightblue",fontsize="10",style="solid"];
  Node14 [label="Drv_ADS1299_updateSlaveData",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__ADS1299__Library.html#gaf7e73c7a2a885b3ce8c63cc1af03851c",tooltip="Function called to receive new data from the slave board. "];
  Node14 -> Node8 [color="midnightblue",fontsize="10",style="solid"];
  Node14 -> Node11 [color="midnightblue",fontsize="10",style="solid"];
  Node14 -> Node13 [color="midnightblue",fontsize="10",style="solid"];
  Node1 -> Node15 [color="midnightblue",fontsize="10",style="solid"];
  Node15 [label="Drv_UART_Send",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__UART__Library.html#ga3cd9c151bd9649652b8f6c7a8a371f4b",tooltip="Send data by UART. "];
  Node15 -> Node16 [color="midnightblue",fontsize="10",style="solid"];
  Node16 [label="Chip_UART_SendBlocking",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__UART__17XX__40XX.html#gad2e45d820abdd0e1790ebd61938c100a",tooltip="Transmit a byte array through the UART peripheral (blocking) "];
  Node16 -> Node17 [color="midnightblue",fontsize="10",style="solid"];
  Node17 [label="Chip_UART_Send",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__UART__17XX__40XX.html#gacbd726b1450510892272857e43854c4c",tooltip="Transmit a byte array through the UART peripheral (non-blocking) "];
  Node17 -> Node18 [color="midnightblue",fontsize="10",style="solid"];
  Node18 [label="Chip_UART_ReadLineStatus",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__UART__17XX__40XX.html#gaf15ab7a9529d102b91760ed5587b279a",tooltip="Return Line Status register/status (LSR) "];
  Node17 -> Node19 [color="midnightblue",fontsize="10",style="solid"];
  Node19 [label="Chip_UART_SendByte",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__UART__17XX__40XX.html#gaa600b8621d1425b1b493238a68f38088",tooltip="Transmit a single data byte through the UART peripheral. "];
}
