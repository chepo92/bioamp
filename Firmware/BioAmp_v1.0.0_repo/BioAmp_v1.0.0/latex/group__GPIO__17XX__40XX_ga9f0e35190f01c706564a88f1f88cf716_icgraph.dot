digraph "Chip_GPIO_GetPinState"
{
  edge [fontname="FreeSans",fontsize="10",labelfontname="FreeSans",labelfontsize="10"];
  node [fontname="FreeSans",fontsize="10",shape=record];
  rankdir="LR";
  Node1 [label="Chip_GPIO_GetPinState",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black"];
  Node1 -> Node2 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node2 [label="Drv_GPIO_getPinState",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__GPIO__Library.html#ga3979c4c389440c603c44afef9b25c6c6",tooltip="Get a GPIO pin state. "];
  Node2 -> Node3 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node3 [label="Drv_ADS1299_isDataAvailable",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__ADS1299__Library.html#ga55bafd8fc454bf91a40711e71c9028e0",tooltip="Query to see if data is available from the ADS1299. "];
  Node3 -> Node4 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node4 [label="Drv_Devices_sendChannelData",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__Devices__Library.html#ga828212dc5604557924cd8ea9e6252c6c",tooltip="Send via UART the data acquired by the ADS. "];
  Node4 -> Node5 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node5 [label="main",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__Application__Layer.html#ga840291bc02cba5474a4cb46a9b9566fe"];
  Node5 -> Node6 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node6 [label="__attribute__",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$cr__startup__lpc175x__6x_8c.html#adce420b900676fa0caed5a713cac82fb"];
  Node2 -> Node7 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node7 [label="Drv_Devices_isMaster",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__Devices__Library.html#ga92e403bbfcda965385b78ce10bbea47a",tooltip="Determines if the board is Master or Slave and set a flag. "];
  Node7 -> Node5 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node1 -> Node8 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node8 [label="Chip_GPIO_ReadPortBit",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__GPIO__17XX__40XX.html#ga74ca55b747c3a51c1ae3e47645da0c75",tooltip="Read a GPIO state. "];
  Node1 -> Node9 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node9 [label="Chip_GPIO_SetPinToggle",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__GPIO__17XX__40XX.html#ga5437e5a8ae2ce7662b605f9961aad8f5",tooltip="Toggle an individual GPIO output pin to the opposite state. "];
  Node9 -> Node10 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node10 [label="Drv_GPIO_setPinToggle",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__GPIO__Library.html#ga240d6ad540b4d4cc042ea7a3a5746159",tooltip="Toggle an individual GPIO output to the opposite state. "];
  Node10 -> Node11 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node11 [label="SysTick_Handler",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__Devices__Library.html#gab5e09814056d617c521549e542639b7e",tooltip="Handle interrupt from SysTick timer. "];
  Node11 -> Node6 [dir="back",color="midnightblue",fontsize="10",style="solid"];
}
